;; ** Variables ***********************************************************************

;; System vars
(deflisten BLIGHT `bash ../scripts/backlight --get`)
(deflisten BATTERY `bash ../scripts/battery --perc`)
(deflisten BATTERYICON `bash ../scripts/battery --icon`)
(deflisten VOLUME `bash ../scripts/audio --get-vol`)
(deflisten VOLUMEICON `bash ../scripts/audio --get-volicon`)
(deflisten MIC `bash ../scripts/audio --get-mic`)
(deflisten MICICON `bash ../scripts/audio --get-micicon`)
(deflisten NET `bash ../scripts/network`)


;; Music vars
(deflisten SONG `bash ../scripts/music --song`)
(deflisten ARTIST `bash ../scripts/music --artist`)
(deflisten STATUS `bash ../scripts/music --status`)
(deflisten COVER `bash ../scripts/music --cover`)


;; Calendar vars
(defpoll day :interval "1h" "date '+%d'")
(defpoll year :interval "1h" "date '+%Y'")



;; ** Elements **************************************************************************

;; system sliders
(defwidget sys_sliders []
  (box :class "genwin" :vexpand "false" :hexpand "false" :width 325
	(box :class "slidersbox" :orientation "v" :spacing 10 :halign "center" :valign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
	  (box :class "volume_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
		(button :width 30 :onclick "bash ../scripts/audio --toggle-vol" 
          (label :class "iconvolume" :text VOLUMEICON))
		(scale :min 10 :max 150 :value VOLUME :active "true" :onchange "bash ../scripts/audio --set-vol {}"))
      (box :class "mic_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
		(button :width 30 :onclick "bash ../scripts/audio --toggle-mic" 
          (label :class "iconmic" :text MICICON))
		(scale :min 10 :max 150 :value MIC :active "true" :onchange "bash ../scripts/audio --set-mic {}"))
      (box :class "bright_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
		(button :width 30 :onclick "" 
		  (label :width 30 :class "iconbright" :text ""))
        (scale :min 1 :max 100 :value BATTERY :active "true" )))))



;; battery
(defwidget battery []
  (box :class "genwin" :vexpand "false" :hexpand "false" :width 65
    (box :class "battery" :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
		(label :class "baticon" :text "${BATTERYICON}")
        (label :text "${BATTERY}%"))))


;; network
(defwidget network []
  (box :class "genwin" :vexpand "false" :hexpand "true" :orientation "h" :width 200
	(button :class "btn_net" :onclick "bash ../scripts/network --toggle" :onmiddleclick ""
      (label :class "network" :text NET))))

;; bluetooth
(defwidget bluetooth []
  (box :class "genwin" :vexpand "false" :hexpand "false" :width 60
	(button :class "btn_bluet" :onclick ""
      (label :text ""))))


;; Power Button
(defwidget powerbutton []
  (box :class "genwin" :vexpand "false" :hexpand "false" :width 60
	(button :class "btn_poweroff" :onclick "bash ../scripts/powermenu" "")))






;; ** Widgets **************************************************************************

;;system
(defwidget system []
  (box :space-evenly "false" :orientation "v" :spacing 10 :width 400
    (box :class "row" :orientation "h" :space-evenly "false" :spacing 10 :height 60
      (network)
      (bluetooth)
      (powerbutton))
    (box :class "row" :orientation "h" :space-evenly "false" :spacing 10 :height 60
      (battery)
      (sys_sliders))
  ))


;; Music
(defwidget music []
    (box :class "genwin" :orientation "v" :space-evenly "false" :vexpand "false" :hexpand "false"
		  
      (box :class "genwin" :orientation "span" :space-evenly "true" :vexpand "false" :hexpand "false"
        (box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
          (box :orientation "v" :width 80
	  	    (label :halign "center" :class "song" :wrap "true" :limit-width 20 :text SONG)
	  	    (label :halign "center" :class "artist" :wrap "true" :limit-width 15 :text ARTIST)))

		(box :orientation "h" :spacing 20 :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false"
		  (button :class "btn_prev" :onclick "bash ../scripts/music --prev" "玲 ")
		  (button :class "btn_play" :onclick "bash ../scripts/music --toggle" STATUS)
		  (button :class "btn_next" :onclick "bash ../scripts/music --next" "怜"))))


;; Calendar
(defwidget cal []
	(box :class "genwin" :orientation "v"
	    (calendar :class "cal" :day day :year year)))







;; ******** DASHBOARD ********************************************************************
(defwidget dashboard []
  (box :class "background" :space-evenly "false" :orientation "v" :spacing 15 :width 400
    (system)
    (music)
    (cal)))

;; ** Windows *************************************************************************

(defwindow dashboard :namespace "dashboard" :monitor 0 :stacking "fg" :focusable "false" :geometry (geometry :anchor "bottom right" :x 5 :y 5)
  (dashboard))
