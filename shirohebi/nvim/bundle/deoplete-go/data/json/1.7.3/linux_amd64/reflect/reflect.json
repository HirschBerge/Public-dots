[0, [{"class": "const", "name": "Array", "type": ""}, {"class": "const", "name": "Bool", "type": ""}, {"class": "const", "name": "BothDir", "type": ""}, {"class": "const", "name": "Chan", "type": ""}, {"class": "const", "name": "Complex128", "type": ""}, {"class": "const", "name": "Complex64", "type": ""}, {"class": "const", "name": "Float32", "type": ""}, {"class": "const", "name": "Float64", "type": ""}, {"class": "const", "name": "Func", "type": ""}, {"class": "const", "name": "Int", "type": ""}, {"class": "const", "name": "Int16", "type": ""}, {"class": "const", "name": "Int32", "type": ""}, {"class": "const", "name": "Int64", "type": ""}, {"class": "const", "name": "Int8", "type": ""}, {"class": "const", "name": "Interface", "type": ""}, {"class": "const", "name": "Invalid", "type": ""}, {"class": "const", "name": "Map", "type": ""}, {"class": "const", "name": "Ptr", "type": ""}, {"class": "const", "name": "RecvDir", "type": ""}, {"class": "const", "name": "SelectDefault", "type": ""}, {"class": "const", "name": "SelectRecv", "type": ""}, {"class": "const", "name": "SelectSend", "type": ""}, {"class": "const", "name": "SendDir", "type": ""}, {"class": "const", "name": "Slice", "type": ""}, {"class": "const", "name": "String", "type": ""}, {"class": "const", "name": "Struct", "type": ""}, {"class": "const", "name": "Uint", "type": ""}, {"class": "const", "name": "Uint16", "type": ""}, {"class": "const", "name": "Uint32", "type": ""}, {"class": "const", "name": "Uint64", "type": ""}, {"class": "const", "name": "Uint8", "type": ""}, {"class": "const", "name": "Uintptr", "type": ""}, {"class": "const", "name": "UnsafePointer", "type": ""}, {"class": "func", "name": "Append", "type": "func(s reflect.Value, x ...reflect.Value) reflect.Value"}, {"class": "func", "name": "AppendSlice", "type": "func(s reflect.Value, t reflect.Value) reflect.Value"}, {"class": "func", "name": "ArrayOf", "type": "func(count int, elem reflect.Type) reflect.Type"}, {"class": "func", "name": "ChanOf", "type": "func(dir reflect.ChanDir, t reflect.Type) reflect.Type"}, {"class": "func", "name": "Copy", "type": "func(dst reflect.Value, src reflect.Value) int"}, {"class": "func", "name": "DeepEqual", "type": "func(x interface{}, y interface{}) bool"}, {"class": "func", "name": "FuncOf", "type": "func(in []reflect.Type, out []reflect.Type, variadic bool) reflect.Type"}, {"class": "func", "name": "Indirect", "type": "func(v reflect.Value) reflect.Value"}, {"class": "func", "name": "MakeChan", "type": "func(typ reflect.Type, buffer int) reflect.Value"}, {"class": "func", "name": "MakeFunc", "type": "func(typ reflect.Type, fn func(args []reflect.Value) (results []reflect.Value)) reflect.Value"}, {"class": "func", "name": "MakeMap", "type": "func(typ reflect.Type) reflect.Value"}, {"class": "func", "name": "MakeSlice", "type": "func(typ reflect.Type, len int, cap int) reflect.Value"}, {"class": "func", "name": "MapOf", "type": "func(key reflect.Type, elem reflect.Type) reflect.Type"}, {"class": "func", "name": "New", "type": "func(typ reflect.Type) reflect.Value"}, {"class": "func", "name": "NewAt", "type": "func(typ reflect.Type, p unsafe.Pointer) reflect.Value"}, {"class": "func", "name": "PtrTo", "type": "func(t reflect.Type) reflect.Type"}, {"class": "func", "name": "Select", "type": "func(cases []reflect.SelectCase) (chosen int, recv reflect.Value, recvOK bool)"}, {"class": "func", "name": "SliceOf", "type": "func(t reflect.Type) reflect.Type"}, {"class": "func", "name": "StructOf", "type": "func(fields []reflect.StructField) reflect.Type"}, {"class": "func", "name": "TypeOf", "type": "func(i interface{}) reflect.Type"}, {"class": "func", "name": "ValueOf", "type": "func(i interface{}) reflect.Value"}, {"class": "func", "name": "Zero", "type": "func(typ reflect.Type) reflect.Value"}, {"class": "type", "name": "ChanDir", "type": "int"}, {"class": "type", "name": "Kind", "type": "uint"}, {"class": "type", "name": "Method", "type": "struct"}, {"class": "type", "name": "SelectCase", "type": "struct"}, {"class": "type", "name": "SelectDir", "type": "int"}, {"class": "type", "name": "SliceHeader", "type": "struct"}, {"class": "type", "name": "StringHeader", "type": "struct"}, {"class": "type", "name": "StructField", "type": "struct"}, {"class": "type", "name": "StructTag", "type": "string"}, {"class": "type", "name": "Type", "type": "interface"}, {"class": "type", "name": "Value", "type": "struct"}, {"class": "type", "name": "ValueError", "type": "struct"}]]