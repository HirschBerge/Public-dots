(defvar home_dir "/home/$USER/.config/eww/Scripts")

(defpoll clipboard_content :interval "1s"
        `/home/$USER/.config/eww/Scripts/clipboard_manager.py`)


(deflisten volume `bash $HOME/.config/eww/scripts/audio --get-vol`)
(defpoll battery :interval "30s"
	`/home/$USER/.config/eww/Scripts/battery.py`)

(deflisten nvidia `../scripts/nvidia_mon_poly.sh`)
;; System
(defpoll used_per :interval "1m" `eww get EWW_DISK |jq .'["/"]'.used_perc`)
(defpoll memory :interval "5s"
    "$HOME/.config/eww/scripts/memory")
(defpoll cpu :interval "5s"
    "$HOME/.config/eww/scripts/cpu")
(defpoll temp :initial 30 :interval "10s" `sensors | rg temp1 | rg -o "\\d+.\\d+" | head -1`)
(defpoll oxidized_weather :initial "..." :interval "1m" `$HOME/.local/bin/weather_app --bar`)
(deflisten workspaces0 "hyprland-workspaces `hyprctl monitors -j | jq -r \".[0].name\"`")

(defpoll quote :interval "24h" "$HOME/.config/eww/scripts/quotes --quote-and-quotee")

(defpoll IP_ADDR :interval "1m" "ip -br a |rg UP | awk '/enp7/ {print $3 }'")

(defpoll window :interval "0.5s" "$HOME/.config/eww/scripts/window-title.sh")
(defpoll wifi :interval "3s"
        `/home/$USER/.config/eww/Scripts/wifi.py`)

(defvar idle_state "󱄅")
(deflisten workspaces :initial "(box (label :text \"󰄯  󰄰  󰄰  󰄰  󰄰\" ))"
	`/home/$USER/.config/eww/Scripts/workspaces.py`)

(deflisten song_status :initial "Select playlist to begin"
        `/home/$USER/.config/eww/Scripts/song_status.py`)


(defpoll wm :interval "12h" "echo $XDG_CURRENT_DESKTOP")
(defpoll shell :interval "1h" "echo $SHELL | awk -F'/' '{print $NF}'")
(defpoll term :interval "1h" "notify-send $(echo $TERM | awk -F'-' '{print $NF}')")
(defpoll uptime :interval "1m" "../scripts/better_uptime.sh $(cut -f1 -d. /proc/uptime)")
;; (defpoll packages :interval "15m" "nix-store --query --requisites /run/current-system/sw |wc -l")
(defpoll pkgs_uniq :initial "..." :interval "10m" "bash $HOME/.config/eww/scripts/packages.sh") 

(defpoll time :interval "5s" "date '+%H:%M'")
(defpoll date :interval "1m" "date '+%D'")
(defwindow bar
	:monitor 1
	:windowtype "dock"
	:geometry (geometry 
			:width "95%"
			:height "2%"
			:anchor "bottom center"
			)
	:exclusive true	

	(box :class "main-container"
    (functions)
    (volume)
    (network-down)
    (network-up)
    (network)
    (weather)
    (nvidia)
    (system)
    (info)
    (clock)
	)
)

(defwidget info []
  (box :class "info-box-outer" :orientation "h" :space-evenly true :halign "center"
    (box :class "info-box-top" :orientation "v" :space-evenly false :valign "center"
      (box :class "info-box-inner" :orientation "h" :space-evenly false
        (box :class "info-box-left" :orientation "v" :space-evenly false
          (label :class "info-icon" :text " :")
          (label :class "info-text" :halign "start" :text "${wm} ")
        )
        (box :class "info-box-right" :orientation "v" :space-evenly false
          (button :class "info-icon"
                  :onclick "kitty $HOME/.scripts/rebuild.sh"
                  :timeout "999999999"
                  :tooltip "Click to Rebuild."
                  (label :text " :"))
          (label :class "info-text" :halign "start" :text "${pkgs_uniq}")
        )
        (box :class "info-box-right" :orientation "v" :space-evenly false
          (label :class "info-icon" :text "󰅐 :")
          (label :class "info-text" :halign "start" :text "${uptime}")
        )
      )
    )
  )
)


(defwidget nvidia []
  (label
    :class "nvidia"
    :text "${nvidia}"
    )
)
(defwidget weather []
  (label
    :class "weatha"
    :text "${oxidized_weather}"
    )
)
(defwidget system []
    (box :class "sys_win" :orientation "h" :space-evenly "false" :hexpand "false" :vexpand "false" 
        ;; CPU Box
        (box :class "sys_cpu_box" :orientation "v" :space-evenly "false" :hexpand "false" :vexpand "true"
            (box :orientation "h" :space-evenly "false" :hexpand "true" :vexpand "true"
                (circular-progress 
                    :value cpu
                    :class "sys_cpu"
                    :thickness 8
                    :tooltip "${EWW_TEMPS.ASUSEC_CPU}°C"
                    (label :text "󰻠"
                        :class "sys_icon_cpu"
                        :limit-width 6
                        :show_truncated false
                        :wrap false
                        :halign "start"
                    ))
                (label :class "cpu_perc" :valign "center" :halign "start" :text " ${cpu}%")
            )
        )
        ;; Memory Box
        (box :class "sys_mem_box" :orientation "v" :space-evenly "false" :hexpand "false" :vexpand "false"
            (box :orientation "h" :space-evenly "false" :hexpand "false" :vexpand "false"
                (circular-progress 
                    :value memory
                    :class "sys_mem"
                    :thickness 8
                    (label :text ""
                        :class "sys_icon_mem"
                        :limit-width 4
                        :show_truncated false
                        :wrap false
                        :angle 0.0
                        :halign "center"
                    :tooltip "${round((EWW_RAM.used_mem / 1024 / 1024 / 1000), 1)}GB"
                    ))
                (label :class "mem_perc" :valign "center" :halign "start" :text " ${memory}%")
            )
        )
        ;; ;; Disk Box
        ;; (box :class "sys_disk_box" :orientation "v" :space-evenly "false" :hexpand "false" :vexpand "false"
        ;;     (box :orientation "h" :space-evenly "false" :hexpand "true" :vexpand "true"
        ;;         (circular-progress 
        ;;             :value "${used_per})"
        ;;             :class "sys_disk"
        ;;             :thickness 8
        ;;             ;; Adjust the tooltip according to your system variable for disk temperature
        ;;             (label :text ""
        ;;                 :class "sys_icon_disk"
        ;;                 :limit-width 4
        ;;                 :wrap false
        ;;                 :angle 0.0
        ;;                 :halign "center"
        ;;             ))
        ;;         (label :class "disk_perc" :valign "center" :halign "start" :text " ${round(used_per, 0)}%")
            ;; )
        ;; )
    )
)


(defwidget clock []
  ( box :orientation "h" :space-evenly "false" :hexpand "false" :vexpand "false" :halign "center"
    (label :class "time" :text time :valign "center" :halign "start" )
    (button
      :onclick "bash $HOME/.config/eww/scripts/launch_dashboard"
      :tooltip "Open Dashboard."
      (label :class "date" :text "${date} " :valign "center" :halign "start"))
    )
)


(defwidget network-up [] 
	(box :class "network" :orientation "h" :space-evenly "false" :spacing 10 :halign "center"
        (box :orientation "h" :class "network-box" 
            (label :text "󰧇" :class "network-up")
        )
        (box :orientation "h" :width 130 
            (graph  :class "network-graph-up"
                    :thickness 2
                    :value {round(EWW_NET.enp7s0.NET_UP / 1024 ,1)}
                    :time-range "2m"
                    :min 10
                    :max 1010
                    :dynamic "true"
                    :line-style "round"
                    :tooltip "${round((EWW_NET.enp7s0.NET_UP / (1024 * 1024) * 8), 1)}Mb/s"
            )
	    )
    )
)
(defwidget network-down [] 
	(box :class "network" :orientation "h" :space-evenly "false" :spacing 10 :halign "center"
        (box :orientation "h" :class "network-box" 
            (label :text "󰦿" :width 10 :class "network-down")
        )
        (box :orientation "h" :width 130
            (graph  :class "network-graph-down"
                    :thickness 2
                    :value {round(EWW_NET.enp7s0.NET_DOWN / 1024 ,1)}
                    :time-range "2m"
                    :min 10
                    :max 1010
                    :dynamic "true"
                    :line-style "round"
                    :tooltip "${round((EWW_NET.enp7s0.NET_DOWN / (1024 * 1024) * 8), 1)}Mb/s"
            )
	    )
    )
)

(defwidget volume []
    (box :class "metric" :orientation "h" :space-evenly "false" :halign "start"
        (label :class "vol-label" :orientation "h" :space-evenly "false" :text "")
        (scale :min 0
            :max 150
            :value volume
            :orientation "h"
            :tooltip "Volume: ${volume}%"
            :onclick "$HOME/.config/eww/scripts/volume --toggle-vol"
            :onchange "bash $HOME/.config/eww/scripts/audio --set-vol {}")
        (label :class "vol-text" :text "${volume}%")
    )
)
(defwidget functions []
    (box :class "function-container" :orientation "v" :space-evenly "true" :halign "center"
      (box :class "function-box" :orientation "h" :space-evenly "false" :hexpand "true" :vexpand "false" :spacing 10
            (button :class "idle"
                :onclick "firefox https://search.nixos.org/packages"
                :onmiddleclick "firefox https://search.nixos.org/options"
                :onrightclick "firefox https://mipmip.github.io/home-manager-option-search/"
		    "${idle_state}")
            (button :class "screenshot"
                :onclick "sleep 0.1; bash $HOME/.config/hypr/scripts/screenshot --area 2> /dev/null"
                :timeout "500ms"
                :tooltip "Screenshot"
            (label :text "󰹑 " :class "tooltip"))
            (button :class "wallpaper"
                :onclick "bash $HOME/.config/hypr/scripts/wayground.sh 2> /dev/null"
                :tooltip "Wallpaper"
            (label :text " " :class "tooltip"))
            (button :class "keybind"
                :onclick "bash $HOME/.config/hypr/scripts/show_binds.sh 2> /dev/null"
                :timeout "1000ms"
                :tooltip "Keybindings"
            (label :text " " :class "tooltip"))
            (button :class "logout"
                :onclick "wlogout 2> /dev/null"
                :tooltip "Logout"
            (label :text "󰍃 " :class "logout")
            )
        )
    )
)
(defwidget dash []
    (box :class "dash" :orientation "h" :space-evenly "false")
)

(defwidget network [] 
	(box :class "network-label" :orientation "h" :space-evenly "false" :spacing 1 :halign "center"
        (label :text "${IP_ADDR}")
    )
)




















